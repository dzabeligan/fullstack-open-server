{"version":3,"sources":["components/AddContactForm.js","services/phonebook.js","components/ContactList.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["AddContactForm","onSubmit","newPerson","onChange","name","value","number","type","baseUrl","axios","get","then","response","data","catch","error","newContact","post","id","changedContact","put","delete","ContactList","filteredPersons","onError","onDelete","map","person","key","onClick","event","window","confirm","phonebookService","message","handleClick","Filter","Notification","color","notification","background","fontSize","borderStyle","borderRadius","borderColor","padding","marginBottom","style","App","useState","persons","setPersons","setNewPerson","search","setSearch","setNotification","useEffect","initialContacts","filter","toLowerCase","includes","target","preventDefault","find","updatedContact","setTimeout","console","log","prevPersons","prevPerson","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3851e71b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst AddContactForm = ({ onSubmit, newPerson, onChange }) => (\r\n  <form onSubmit={onSubmit}>\r\n    <div>\r\n      name: <input name=\"name\" value={newPerson.name} onChange={onChange} />\r\n    </div>\r\n    <div>\r\n      number: <input name=\"number\" value={newPerson.number} onChange={onChange} />\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">add</button>\r\n    </div>\r\n  </form>\r\n);\r\n\r\nexport default AddContactForm;\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () =>\r\n  axios\r\n    .get(baseUrl)\r\n    .then((response) => response.data)\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n\r\nconst createContact = (newContact) =>\r\n  axios\r\n    .post(baseUrl, newContact)\r\n    .then((response) => response.data)\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n\r\nconst updateContact = (id, changedContact) =>\r\n  axios\r\n    .put(`${baseUrl}/${id}`, changedContact)\r\n    .then((response) => response.data)\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n\r\nconst deleteContact = (id) =>\r\n  axios\r\n    .delete(`${baseUrl}/${id}`)\r\n    .then((response) => response.data)\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n\r\nexport default { getAll, createContact, updateContact, deleteContact };\r\n","import React from 'react';\r\n\r\nimport phonebookService from '../services/phonebook';\r\n\r\nconst ContactList = ({ filteredPersons, onError, onDelete }) => {\r\n  const handleClick = (event, { id, name }) => {\r\n    if (!window.confirm(`Delete ${name} ?`)) return;\r\n    phonebookService\r\n      .deleteContact(id, name)\r\n      .then((response) => onDelete(id))\r\n      .catch((error) => {\r\n        onDelete(id);\r\n        onError({ message: `the contact '${name}' was already deleted from server`, type: 'error' });\r\n      });\r\n  };\r\n\r\n  return filteredPersons.map((person) => (\r\n    <p key={person.id}>\r\n      {person.name} {person.number} <button onClick={(event) => handleClick(event, person)}>delete</button>\r\n    </p>\r\n  ));\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <div>\r\n    filter shown with <input type=\"search\" value={value} onChange={onChange} />\r\n  </div>\r\n);\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ type, message }) => {\r\n  const color = type === 'error' ? 'red' : 'green';\r\n  const notification = {\r\n    color,\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    borderColor: color,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  };\r\n\r\n  return message ? <div style={notification}>{message}</div> : null;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from 'react';\n\nimport AddContactForm from './components/AddContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport Notification from './components/Notification';\nimport phonebookService from './services/phonebook';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newPerson, setNewPerson] = useState({ name: '', number: '' });\n  const [search, setSearch] = useState('');\n  const [notification, setNotification] = useState({});\n\n  useEffect(() => {\n    phonebookService.getAll().then((initialContacts) => setPersons(initialContacts));\n  }, []);\n\n  const filteredPersons = persons.filter((person) => person.name.toLowerCase().includes(search.toLowerCase()));\n\n  const handleSearch = ({ target: { value } }) => setSearch(value);\n\n  const handleChange = ({ target: { name, value } }) =>\n    setNewPerson((prevPerson) => ({ ...prevPerson, [name]: value }));\n\n  const handleError = (notification) => {\n    setNotification(notification);\n    setTimeout(() => setNotification({}), 5000);\n  };\n\n  const handleDelete = (id) => setPersons(persons.filter((person) => person.id !== id));\n\n  const addName = (event) => {\n    event.preventDefault();\n    if (persons.find((person) => person.name.toLowerCase() === newPerson.name.toLowerCase())) {\n      if (\n        !window.confirm(\n          `${newPerson.name} is already added to phonebook. Do you want to replace the old number with a new one?`,\n        )\n      )\n        return;\n      const id = persons.find((person) => person.name.toLowerCase() === newPerson.name.toLowerCase()).id;\n      phonebookService\n        .updateContact(id, newPerson)\n        .then((updatedContact) => {\n          setPersons(persons.map((person) => (person.id !== id ? person : updatedContact)));\n          setNotification({ message: `Updated number for ${newPerson.name}` });\n          setTimeout(() => setNotification({}), 5000);\n        })\n        .catch((error) => {\n          console.log(error);\n          setNotification({\n            message: `Information of ${newPerson.name} has already been removed from server`,\n            type: 'error',\n          });\n          setTimeout(() => setNotification({}), 5000);\n          setPersons(persons.filter((person) => person.id !== id));\n        });\n      setNewPerson({ name: '', number: '' });\n      return;\n    }\n    phonebookService\n      .createContact(newPerson)\n      .then((newContact) => {\n        setPersons((prevPersons) => [...prevPersons, newContact]);\n        setNotification({ message: `Added ${newPerson.name}` });\n        setTimeout(() => setNotification({}), 5000);\n        setNewPerson({ name: '', number: '' });\n      })\n      .catch((error) => {\n        console.log(error);\n        setNotification({ message: error.message, type: 'error' });\n        setTimeout(() => setNotification({}), 5000);\n      });\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification type={notification?.type} message={notification.message} />\n      <Filter value={search} onChange={handleSearch} />\n      <h2>Add a new contact</h2>\n      <AddContactForm onSubmit={addName} newPerson={newPerson} onChange={handleChange} />\n      <h2>Numbers</h2>\n      <ContactList filteredPersons={filteredPersons} onError={handleError} onDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}